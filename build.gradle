/*
 *   Copyright (C) 2018-2020 bkosaraju
 *   All Rights Reserved.
 *
 *   Licensed to the Apache Software Foundation (ASF) under one
 *   or more contributor license agreements.  See the NOTICE file
 *   distributed with this work for additional information
 *   regarding copyright ownership.  The ASF licenses this file
 *   to you under the Apache License, Version 2.0 (the
 *   "License"); you may not use this file except in compliance
 *   with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

buildscript {
    ext.scalaVariant = "2.12"
    ext.sparkVersion = "3.0.0"
    ext.awsSDKVersion = "1.11.721"

    repositories {
        maven {
            url "${gradle.artifactoryUrl}"
            if (System.getenv("ARTIFACTORY_USER") || Project.hasProperty('artifactoryUser')) {
                credentials {
                    username = System.getenv("ARTIFACTORY_USER") ?: artifactoryUser
                    password = System.getenv("ARTIFACTORY_PASSWORD") ?: artifactoryPassword
                }
            }
        }
        dependencies {
            classpath "org.ajoberstar:grgit:2.3.0"
            classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        }
    }
}

plugins {
    id 'scala'
    id "application"
    id "org.scoverage" version "4.0.2"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "jacoco"
    id "java-library"
    id "com.adarshr.test-logger" version "1.3.0"
    id "maven-publish"
}

group "${gradle.projectGroup}"
mainClassName = "io.github.bkosaraju.oozielogger.driver"
repositories {
    maven {
        url "${gradle.artifactoryUrl}"
        if (System.getenv("ARTIFACTORY_USER") || Project.hasProperty('artifactoryUser')) {
            credentials {
                username = System.getenv("ARTIFACTORY_USER") ?: artifactoryUser
                password = System.getenv("ARTIFACTORY_PASSWORD") ?: artifactoryPassword
            }
        }
    }
}

configurations {
    assembly
    compile.extendsFrom assembly
}

configurations {
    provided
    compile.extendsFrom provided
}

configurations {
    testImplementation.extendsFrom compileOnly
}

configurations {
    archivesBaseName = "${gradle.projectName}" + "_${scalaVariant}"
}

dependencies {

    api group: 'org.scala-lang', name :'scala-library', version : "$scalaVariant"+'.12'

    api group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    api group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    api group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    api group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'
    api group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    api group: 'org.apache.activemq', name: 'activemq-core', version: '5.7.0'
    api group: 'org.apache.oozie', name: 'oozie-client', version: '4.2.0'

    api group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.11', version: '2.9.5'
    api group: 'com.zaxxer', name: 'HikariCP', version: '3.1.0'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.2.3'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.3.18.RELEASE'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'

}

compileScala {
    scalaCompileOptions.additionalParameters = ["-feature"]
}

shadowJar {
    zip64 true
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
}

tasks.build.dependsOn tasks.shadowJar

test {
    useJUnit {}
    jvmArgs '-Xmx1024m'
    testLogging.showStandardStreams = true
    reports {
        junitXml.enabled = true
    }

}

testlogger {
    theme 'standard'
    showExceptions true
    slowThreshold 10000
    showSummary true
    showStandardStreams false
}


def gitlogDir = new File( project.projectDir.toString() + '/.git')
if (gitlogDir.exists()) {
    //disable in case if you dont want to publish
    apply from: 'ci/git.gradle'
    apply from: 'ci/artifactory.gradle'
    apply from: 'ci/sonatype.gradle'
}